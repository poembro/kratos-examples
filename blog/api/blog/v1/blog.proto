syntax = "proto3";

package blog.v1;


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/go-kratos/examples/blog/api/blog/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
    title: "博客项目-文章模块";
    description: "文章模块文档";
    contact: {
        name: "博客项目";
        url: "https://github.com/poembro/kfd";
        email: "poembro@gmail.com";
    };
    license: {
        name: "武汉xx网络科技公司版权所有";
        url: "#";
    };
  },
  security_definitions: {
    security: {
      key: "jwt",
      value: {
        type: TYPE_API_KEY,
        in: IN_HEADER,
        name: "Authorization",
        flow: FLOW_IMPLICIT,
        description: "授权token"
      }
    }
  },
};

service BlogService {
    rpc CreateArticle (CreateArticleRequest) returns (CreateArticleReply) {
        option (google.api.http) = {
            post: "/v1/article"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags:["抽奖模块"]
            summary:"抽奖创建",
            description:"抽奖创建"
            security: {
                security_requirement: {
                key: "jwt"
                }
            }
        };
    }
    rpc UpdateArticle (UpdateArticleRequest) returns (UpdateArticleReply) {
        option (google.api.http) = {
            put: "/v1/article/{id}"
            body: "*"
        };

    }
    rpc DeleteArticle (DeleteArticleRequest) returns (DeleteArticleReply) {
        option (google.api.http) = {
            delete: "/v1/article/{id}"
        };
    }
    rpc GetArticle (GetArticleRequest) returns (GetArticleReply) {
        option (google.api.http) = {
            get: "/v1/article/{id}"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags:["抽奖模块"]
            summary:"抽奖详情",
            description:"抽奖详情"
            security: {
                security_requirement: {
                key: "jwt"
                }
            }
        };
    }
    rpc ListArticle (ListArticleRequest) returns (ListArticleReply) {
        option (google.api.http) = {
            get: "/v1/article"
        };
    }
}

message Article {
    int64 id = 1;
    string title = 2;
    string content = 3;
    int64 like = 4;
}

message CreateArticleRequest {
    string title = 1 ;
    string content = 2;
}

message CreateArticleReply {
    Article Article = 1;
}

message UpdateArticleRequest {
    int64 id = 1;
    string title = 2;
    string content = 3;
}

message UpdateArticleReply {
    Article Article = 1;
}

message DeleteArticleRequest {
    int64 id = 1;
}
message DeleteArticleReply {
}

message GetArticleRequest {
    int64 id = 1;
}

message GetArticleReply {
    Article Article = 1;
}

message ListArticleRequest {
}

message ListArticleReply {
    repeated Article results = 1;
}
